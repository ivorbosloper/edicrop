
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package nl.agroconnect;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

import nl.agroconnect.wsEdiCrop.v4_0.CodeType;
import nl.agroconnect.wsEdiCrop.v4_0.CountryIDType;
import nl.agroconnect.wsEdiCrop.v4_0.EdiPortType;
import nl.agroconnect.wsEdiCrop.v4_0.GetCropRecordingRequest;
import nl.agroconnect.wsEdiCrop.v4_0.GetCropRecordingResponse;
import nl.agroconnect.wsEdiCrop.v4_0.GetCroppingSchemeRequest;
import nl.agroconnect.wsEdiCrop.v4_0.GetCroppingSchemeResponse;
import nl.agroconnect.wsEdiCrop.v4_0.IDType;
import nl.agroconnect.wsEdiCrop.v4_0.ISOTwoletterCountryCodeIdentifierContentType;
import nl.agroconnect.wsEdiCrop.v4_0.TextType;
import nl.agroconnect.wsEdiCrop.v4_0.crps.DocumentType;
import nl.agroconnect.wsEdiCrop.v4_0.crps.PartyContactType;
import nl.agroconnect.wsEdiCrop.v4_0.crps.SpecifiedCommunicationType;
import nl.agroconnect.wsEdiCrop.v4_0.crps.SpecifiedPartyType;
import nl.agroconnect.wsEdiCrop.v4_0.crps.FarmType;
import nl.agroconnect.wsEdiCrop.v4_0.crps.CroppingSchemeMessageType;
import nl.agroconnect.wsEdiCrop.v4_0.crps.StructuredAddressType;

/**
 * This class was generated by Apache CXF 2.7.5
 * 2013-06-17T17:09:31.729+02:00
 * Generated source version: 2.7.5
 * 
 */

@javax.jws.WebService(
                      serviceName = "EdiService",
                      portName = "Edi",
                      targetNamespace = "http://www.agroconnect.nl/Portals/10/XSDs/WS_EDI_Crop/v4_0/",
                      wsdlLocation = "doc/wsdl4/WSDL_WS-EDI-Crop.wsdl",
                      endpointInterface = "nl.agroconnect.wsEdiCrop.v4_0.EdiPortType")
                      
public class EdiPortTypeImpl implements EdiPortType {

    private static final Logger LOG = Logger.getLogger(EdiPortTypeImpl.class.getName());
    private static final CodeType NL = new CodeType("NL", "", "", "", "", "", "", "", "", "");
    private static final CountryIDType NLC = new CountryIDType(ISOTwoletterCountryCodeIdentifierContentType.NL, "", "", "");
    		
    /* (non-Javadoc)
     * @see nl.agroconnect.wsEdiCrop.v4_0.EdiPortType#getCropRecording(nl.agroconnect.wsEdiCrop.v4_0.GetCropRecordingRequest  payload )*
     */
    public GetCropRecordingResponse getCropRecording(GetCropRecordingRequest payload) { 
        LOG.info("Executing operation getCropRecording");
        System.out.println(payload);
        try {
            GetCropRecordingResponse _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    protected TextType s(String s) {
    	return new TextType(s, "NL");
    }

    protected IDType kvk(String s) {
    	return new IDType(s, "KVK", "", "", "", "", "", "");
    }
    
    /* (non-Javadoc)
     * @see nl.agroconnect.wsEdiCrop.v4_0.EdiPortType#getCroppingScheme(nl.agroconnect.wsEdiCrop.v4_0.GetCroppingSchemeRequest  payload )*
     */
    public GetCroppingSchemeResponse getCroppingScheme(GetCroppingSchemeRequest payload) { 
        LOG.info("Executing operation getCroppingScheme");
        System.out.println(payload);
        try {
        	StructuredAddressType address = new StructuredAddressType(new IDType(), new CodeType(), this.s(""), this.s("Straat"), this.s("Groningen"), EdiPortTypeImpl.NLC, this.s("Nederland"), (TextType)null);
        	PartyContactType contact = new PartyContactType();
			SpecifiedCommunicationType comm = new SpecifiedCommunicationType();
			SpecifiedPartyType party = new SpecifiedPartyType(payload.getFarmID(),this.s("Test farm"), this.NL, address, address, contact, comm);
        	party.setID(payload.getFarmID());
        	DocumentType doc = new DocumentType();
        	
        	FarmType farm = new FarmType(party, payload.getFarmID(), null, null, null);
        	CroppingSchemeMessageType msg = new CroppingSchemeMessageType(doc, farm);
        	return new GetCroppingSchemeResponse(0,payload.getMessageId(), msg);
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
